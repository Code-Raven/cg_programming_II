* = less important...
** = more important...
*** = priority...

***remove gl libraries from visual studio project...
***model loader should load in obj with quads...
***model loader should generate normals when not provided...

**make member variabls by prepending m
**go through objects and make sure all memory is properly being cleaned up...

*Get object state (save state) working...
*load 3d mesh...
*stop render from pausing while dragging window around (or pause update when render is paused)...
*create an ini file to control app...
*integrate mac gui (may need to draw window different way)...
    https://developer.apple.com/library/mac/documentation/GraphicsImaging/Conceptual/OpenGL-MacProgGuide/opengl_fullscreen/opengl_cgl.html
*create and parse in level files (specifiy what kind of objects are in scene, how many, and what their properties are)...

NOTES:

//For texture information...
https://open.gl/textures

Lightingâ€¦
http://www.tomdalling.com/blog/modern-opengl/07-more-lighting-ambient-specular-attenuation-gamma/
http://140.129.20.249/~jmchen/cg/docs/rendering%20pipeline/rendering/light_ambient.html

http://http.developer.nvidia.com/CgTutorial/cg_tutorial_chapter05.html

///////////////////
Lighting terms:
    emissive, ambient, diffuse, and specular.

Basic Lighting Model:
    surfaceColor = emissive + ambient + diffuse + specular

emissive = object color (described as light or a glow emitting from an object).
emissive = Ke (object color)

ambient = light color * object reflectance (often described as light evenly bouncing around)
ambient = globalAmbient * Ka (Ka is reflectance, and globalAmbient is light color)

attenuation







Object
    has material
    